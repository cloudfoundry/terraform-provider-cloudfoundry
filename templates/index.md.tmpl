---
page_title: "{{.RenderedProviderName}} Provider"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---
# Terraform Provider for {{.RenderedProviderName}}

{{ .Description | trimspace }}

{{ if .HasExample -}}
## Example Usage

{{tffile .ExampleFile}}
{{- end }}

{{ .SchemaMarkdown | trimspace }}

**Note** 

All parameter values for the provider can be injected by setting environment variables `CF_API_URL`, `CF_USER`, `CF_PASSWORD`, `CF_ORIGIN`, `CF_CLIENT_ID`, `CF_CLIENT_SECRET`, `CF_ACCESS_TOKEN`, `CF_REFRESH_TOKEN`.
Alternatively, one can even log in to their CF landscape via CF-CLI and the provider will pick the credentials from the config.json present in CF Home in case no attributes are given in the provider block or if no environment variables are set.

## Custom User-Agent Information

By default, the underlying Cloud Foundry client used by the Terraform Cloud Foundry Provider creates requests with User-Agent headers that include information about Terraform and Cloud Foundry Terraform provider versions. To add more details to the User-Agent headers, the `CF_APPEND_USER_AGENT` environment variable can be set, and its value will be directly added to HTTP requests. E.g.,

```bash
% export CF_APPEND_USER_AGENT="Optional_Extra_Information"
```

## Enabling Application Log Tracing

To assist with debugging application failures, you can enable log tracing by setting the following environment variable:

```bash
% export ENABLE_CF_APP_LOG_TRACE="true"
```
When enabled, recent error logs from the application will be printed to the console if a deployment of application fails.

## Get Started

If you're not familiar with Terraform yet, see the [Fundamentals](https://developer.hashicorp.com/terraform/tutorials/cli) section with a lot of helpful tutorials. 

## Migration Guide

The newer v3 APIs have brought several changes to  many of the resources created. Some are even deprecated and replaced by 
different resources.

Please refer to the [migration guide](https://github.com/cloudfoundry/terraform-provider-cloudfoundry/tree/main/migration-guide) to help transitioning from the existing [community CF provider](https://github.com/cloudfoundry-community/terraform-provider-cloudfoundry) to the [current CF provider](https://github.com/cloudfoundry/terraform-provider-cloudfoundry). The migration guide 
highlights the differences and maps to the equivalent resources/datasources as well.

## Best Practices

For the best experience using the {{.RenderedProviderName}} provider, we recommend applying the common best practices for Terraform adoption as described in the Hashicorp documentation. For example, see [Phases of Terraform Adoption](https://developer.hashicorp.com/well-architected-framework/operational-excellence/operational-excellence-terraform-maturity).
